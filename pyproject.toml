[project]
name = "discord-publish-bot"
version = "0.2.0"
description = "Discord bot that publishes posts to GitHub repositories as formatted markdown files"
authors = [
    {name = "Discord Publish Bot Team"}
]
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    # Discord Bot Dependencies
    "discord.py==2.3.2",
    "aiohttp==3.9.1",
    "pynacl==1.5.0",
    
    # Publishing API Dependencies
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "PyGithub==1.59.1",
    "python-multipart==0.0.6",
    "pydantic==2.5.0",
    "pydantic-settings==2.0.3",
    
    # CLI and utilities
    "click==8.1.7",
    
    # Shared Dependencies
    "python-dotenv==1.0.0",
    "pyyaml==6.0.1",
    
    # Security and Monitoring
    "slowapi==0.1.9",
    "prometheus-client==0.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "black==23.11.0",
    "isort==5.12.0",
]

monitoring = [
    "sentry-sdk[fastapi]==1.38.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/discord-publish-bot"
Repository = "https://github.com/yourusername/discord-publish-bot"
Documentation = "https://github.com/yourusername/discord-publish-bot/blob/main/README.md"

[project.scripts]
discord-publish-bot = "discord_publish_bot.main:main"
dpb = "discord_publish_bot.main:main"
dpb-api = "discord_publish_bot.main:api_main"

# Legacy compatibility
discord-bot = "discord_publish_bot.main:cli_main"
publishing-api = "discord_publish_bot.main:api_main"
combined-app = "discord_publish_bot.main:api_main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/discord_publish_bot"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "src/*/main.py",  # Entry points often hard to test
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
